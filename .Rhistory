hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = magenta, lwd = 4)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg<- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution, region == "east")
head(east)
hist(east$pm25, "green")
hist(east$pm25, col ="green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude,pm25))
abline(h = 12)
abline(h = 12, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col=pollution$region)
abine(h = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow=c(1,2), mar = (5,4,2,1))
par(mfrow=c(1,2), mar = c(5,4,2,1))
west<-subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main="old Faithful Geyser data")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file='geyserplot.png')
dev.off()
head(cars)
with(cars, plot(speed,dist))
text(mean(cars$speed), max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data= state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data= state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
zplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~month, airquality )
boxplot(Ozone~Month, airquality )
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis = "blue", col.lab = "red" )
title("Ozone and wind in New York City")
title("Ozone and w=Wind in New York City")
title(main="Ozone and w=Wind in New York City")
title(main="Ozone and Wind in New York City" )
with( airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City" )
par()
length(par())
names(par())
?par
par()$pin
par("fg")
par('pch')
par('lty')
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airquality,Month==5)
points(may$Wind, may$Ozone, col = "blue", pch=3)
points(may$Wind, may$Ozone, col = "blue", pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue","red"), Legend=c("May","Other Months")
)
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation").
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
download.file("http://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption", method="curl")
download.file("http://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption",'./week1Project/zipdata.zip' method="curl")
download.file("http://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption",'./week1Project/zipdata.zip')
?unzip
unzip("zipdata.zip", exdir="week1Project/data")
ls
ls()
dir()
cd data
temp<-tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
?read.table
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
comment.char = "?" )
head(data)
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
header=TRUE,
sep = ";",
comment.char = "?")
data[6840]
data[6840,]
na.strings = "?")
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
)
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
header=TRUE,
sep = ";",
quote = "",
na.strings = "?")
summary(data)
class(data)
class(data$Date)
?strptime()
library(lubridate)
dmy(data$Date[1])
class(dmy(data$Date[1]))
data$Date = dmy(data$Date)
data$Time = hms(data$Time)
date$Time[1]
head(date$Time)
head(data)
?strptime
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
header=TRUE,
sep = ";",
quote = "",
na.strings = "?")
strtime(data$Time[1])
strptime(data$Time[1])
?lubridate
hms(data$Time[1])
class(hms(data$Time[1]))
as.Date(data$Time[1:5])
hms(data$Time[1])
hms(data$Time[1])-hms(date$Time[2])
t1=hms(data$Time[1])
t2=hms(data$Time[2])
t1-t2
dateTime = paste(data$Date,data$Time,sep="")
dateTime = dmy_hms(dateTime)
class(dateTime)
head(dateTime)
dateTime = paste(data$Date,data$Time,sep="")
with(data, hist(Global_Active_Power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"))
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"))
plot.new()
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"))
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1))
dev.off()
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1))
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
data$Date = paste(data$Date,data$Time, sep="")
data$Date = dmy_hms(data$Date)
data$Time = hms(data$Time)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
unlink(temp)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
library(dplyr)
?filter
data2<- filter(data, Date == "01/02/2007", Date=="02/02/2007")
head(data2)
data2<- filter(data, Date %in% c("01/02/2007","02/02/2007"))
unique(data$Date)
data2<- filter(data, dmy(Date) %in% c(dmy("01/02/2007)",dmy("02/02/2007"))
)
data2<- filter(data, dmy(Date) %in% c(dmy("01/02/2007"),dmy("02/02/2007"))
)
head(data2)
table(data2$Date)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
class(data$DateTime)
mdy(feb 1,2007)
mdy("feb 1,2007")
dmy("Feb 1,2007")
mdy("Feb 1,2007")
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1))
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
## add a DateTime variable (a POSIXct date-time object)
data$DateTime = paste(data$Date,data$Time, sep="")
## add a DateTime variable (a POSIXct date-time object)
data$DateTime = paste(data$Date,data$Time, sep=" ")
data$DateTime = dmy_hms(data$DateTime)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1))
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1), xlim = 0:6)
with(data, hist(Global_active_power,col="red", main = "Global Active Power",
ylab="Frequency", xlab = "Global Active Power (kilowatts"))
with(data, hist(Global_active_power,col="red", main = "Global Active Power",
ylab="Frequency", xlab = "Global Active Power (kilowatts)"))
ls
ls()
"data" %in% ls()
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/Week4Project/plot4.R', encoding = 'UTF-8')
dir()
setwd("C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/Week4Project")
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/Week4Project/plot4.R', encoding = 'UTF-8')
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4 + geom_bar(stat="identity") +
facet_wrap(~SCC)+
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.1,"cm")) +
guides(fill=guide_legend(ncol = 11 ))
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.1,"cm")) +
guides(fill=guide_legend(ncol = 11 ))
png(file = 'plot4.png')
print(g4)
dev.off()
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.1,"cm")) +
guides(fill=guide_legend(ncol = 11 )) # This is how I changed the legend matrix
png(file = 'plot4.png')
print(g4)
dev.off()
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.1,"cm")) +
guides(fill=guide_legend(ncol = 10 )) # This is how I changed the legend matrix
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.1,"cm")) +
guides(fill=guide_legend(ncol = 10 )) # This is how I changed the legend matrix
png(file = 'plot4.png')
print(g4)
dev.off()
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.1,"cm")) +
guides(fill=guide_legend(ncol = 9 )) # This is how I changed the legend matrix
g4
png(file = 'plot4.png')
print(g4)
dev.off()
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.9,"cm")) +
guides(fill=guide_legend(ncol = 9 )) # This is how I changed the legend matrix
g4
png(file = 'plot4.png')
print(g4)
dev.off()
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.9,"cm")) +
guides(fill=guide_legend(ncol = 9 )) # This is how I changed the legend matrix
g4
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.09,"cm")) +
guides(fill=guide_legend(ncol = 9 )) # This is how I changed the legend matrix
g4
png(file = 'plot4.png')
print(g4)
dev.off()
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.09,"cm")) +
guides(fill=guide_legend(ncol = 9 )) # This is how I changed the legend matrix
g4
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.1,"cm")) +
guides(fill=guide_legend(ncol = 9 )) # This is how I changed the legend matrix
g4
## Plotting total emissions in thousands of tons and filling in the bar graph
## with its color mapped to each SCC label.
g4<- ggplot(totals, aes(x = year, y = tot.emissions/1e3, fill = SCC))
g4
print(g4)
str(g4)
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.1,"cm")) +
guides(fill=guide_legend(ncol = 9 )) # This is how I changed the legend matrix
print(g4)
g4<- g4 + geom_bar(stat="identity") +
labs(title = "PM2.5 Emissions: All Coal Combustion Sources",
subtitle = "United States of America",
caption = paste("Data Source:",url),
y = "Total Thousand Tons") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 15, face = "bold"),
plot.caption = element_text(hjust = 0, size = 10 , color = "blue",
face ="italic"),
legend.text = element_text(size=8),
legend.margin = margin(0.0,0.0,0.0,0.0,"cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.height = unit(.1,"cm"),
legend.key.width = unit(.1,"cm")) +
guides(fill=guide_legend(ncol = 11 ))
setwd("C:/Users/sarah/OneDrive/R/dataScienceCoursera/StatisticalInference")
update.packages(ask=F,checkBuilt = T)
tinytex::tlmgr_update()
install.packages("tinytex")
library("Miketex")
setwd("C:/Users/sarah/OneDrive/R/dataScienceCoursera/StatisticalInference")
x = seq(0,10,.1)
x
expf<-0.2*e^(-0.2*x)
expf<-0.2*exp^(-0.2*x)
?exp
plot(dexp(x,rate = 0.2))
curve(dexp(y,rate=0.2))
curve(dexp(x,0.2))
x = seq(0,10,.1)
plot(x,dexp(x,rate = 0.2))
hist(dexp(x,0.2),probability = TRUE)
