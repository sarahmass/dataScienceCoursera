summarize(testing,.groups="keep",mean = mean("tbodyAcc-mean()-X"))
summarize(testing,.groups="keep",mean = mean(tbodyAcc-mean()-X))
summarize(testing,.groups="keep",mean = mean(testing$`tBodyAcc-mean()-X`)
)
names(testing)
names(testing)[3]
testing$tBodyACC-mean()-Z
testing$'tBodyACC-mean()-Z'
summarise_all(testing,"mean")
names(data) <- gsub("()","", names(data))
names(data) <- gsub("-", ".")
names(data) <- gsub("()","", names(data))
names(data) <- gsub("-", ".", names(data))
names(data)
names(data)<-gsub('(',"", names(data))
names(data)<-gsub('//(',"", names(data))
names(data)<-gsub('\\(',"", names(data))
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/gettingCleaningdata/run_analysis.R')
names(data)
?across
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/gettingCleaningdata/run_analysis.R')
View(SubActivityMeans)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/gettingCleaningdata/run_analysis.R')
View(SubActivityMeans)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/gettingCleaningdata/run_analysis.R')
View(SubActivityMeans)
?summarize_all
.vars
data.vars
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/gettingCleaningdata/run_analysis.R')
View(SubActivityMeans)
names(data)
table(names(data))
unlist(names(data))
ls(packageStatus())
ls(package)
sessionInfo()
?write.csv
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/gettingCleaningdata/run_analysis.R')
View(data)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/gettingCleaningdata/run_analysis.R')
tbl1<- read.table("https://coursera-assessments.s3.amazonaws.com/assessments/1606270153388/45d57f9c-1477-449c-f28f-a6f4160bf28f/tidydata.txt",method = "curl")
tbl1<- read.table("https://coursera-assessments.s3.amazonaws.com/assessments/1606270153388/45d57f9c-1477-449c-f28f-a6f4160bf28f/tidydata.txt")
View(tbl1)
tbl1<- read.table(https://coursera-assessments.s3.amazonaws.com/assessments/1606274461987/ef0bf41b-68df-4561-dae9-9e5123347fb3/TidyResult.txt)
tbl1<- read.table("https://coursera-assessments.s3.amazonaws.com/assessments/1606274461987/ef0bf41b-68df-4561-dae9-9e5123347fb3/TidyResult.txt")
View(tbl1)
getwd()
setwd('./ExploratoryDataAnalysis')
getwd()
download.file("https://github.com/sarahmass/courses/blob/master/04_ExploratoryAnalysis/exploratoryGraphs/data/avgpm25.csv",".data/avgpm25.csv")
download.file("https://github.com/sarahmass/courses/blob/master/04_ExploratoryAnalysis/exploratoryGraphs/data/avgpm25.csv","./data/avgpm25.csv")
pollution <- read.csv("data/avgpm25.csv", colClasses = c("numeric",
"character","factor", "numeric", "numeric"))
download.file("https://github.com/sarahmass/courses/blob/master/04_ExploratoryAnalysis/exploratoryGraphs/data/avgpm25.csv","./data/avgpm25.csv", method = "curl")
head(pollution)
pollution <- read.csv("data/avgpm25.csv", colClasses = c("numeric",
"character","factor", "numeric", "numeric"))
download.file("https://raw.githubusercontent.com/sarahmass/courses/master/04_ExploratoryAnalysis/exploratoryGraphs/data/avgpm25.csv","./data/avgpm25.csv", method = "curl")
pollution <- read.csv("data/avgpm25.csv", colClasses = c("numeric",
"character","factor", "numeric", "numeric"))
head(pollution)
## one dimensional summaries
## 1.  five number summary:
summary(pollution$pm25)
boxplot(pollution$pm25, col = "blue")
hist(pollution$pm25, col = "green")
rug(polution$25)
rug(polution$pm25)
hist(pollution$pm25, col = "green")
rug(polution$pm25)
rug(pollution$pm25)
hist(pollution$pm25, col = "green",breaks = 100)
rug(pollution$pm25)
## add a line to show the cut off for the max allowed measurement
boxplot(pollution$pm25, col = "blue")
abline(h = 12)
## add abline to a histogram:
hist(pollution$pm25, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(pollution$pm25), col = "magenta", lwd = 4)
abline(v = mean(pollution$pm25), col = "blue", lwd = 2)
barplot(table(pollution$region),col = "wheat", main = "Number of
Counties in Each Region")
# plot two dim. data by plotting box plots or pm25 with respect to
# region:
boxplot(pm25 ~ region, data = pollution, col = "red")
#similar type of plot with histograms:
par(mfrow = c(2,1), mar = c(4,4,2,1))
hist(subset(pollution,region=="east")$pm25, col = "green")
hist(subset(pollution,region=="west")$pm25, col = "green")
#scatter plot
with(pollution, plot(latitude,pm25))
abline(h = 12, lwd = 2, lty = 2)
#scatter plot
with(pollution, plot(latitude,pm25), col = region)
abline(h = 12, lwd = 2, lty = 2)
#scatter plot
with(pollution, plot(latitude,pm25), col = region)
abline(h = 12, lwd = 2, lty = 2)
#scatter plot
with(pollution, plot(latitude,pm25, col = region)
#scatter plot
with(pollution, plot(latitude,pm25, col = region)
#scatter plot
with(pollution, plot(latitude,pm25, col = region)
)
#scatter plot
with(pollution, plot(latitude,pm25, col = region))
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1,2), m
)
par(mfrow = c(1,2), mar = c(5,4,2,1))
with(subset(pollution,region == "west"), plot(latitude,pm25, main = "West"))
with(subset(pollution,region == "east"), plot(latitude,pm25, main = "East"))
library(datasets)
data(cars)
with(cars, plot(speed, dist))
library(lattice)
state<- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state,
layout = c(4,1))
library(ggplot2)
data(mpg)
qplot(displ,hwy,data = mpg)
?par
?plot
hist(airquality$Ozone)
library(datsets)
hist(airquality$Ozone)
with(airquality, plot(Wind,Ozone))
airquality<- transform(airquality,Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)")
colors()
par('lty')
par("pch")
with(airquality, plot(Wind,Ozone))
# add a title:
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind,Ozone),main = "Ozone and Wind in New York City")
with(subset(airquality,Month == 5), points(Wind,Ozone, col="blue"))
with(airquality, plot(Wind,Ozone,
main = "Ozone and Wind in New York City"))
with(subset(airquality,Month == 5), points(Wind,Ozone, col="blue"))
## Example 3:
with(airquality, plot(Wind,Ozone,
main = "Ozone and Wind in New York City",
type = "n"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col="blue"))
with(subset(airquality, Month != 5), points(Wind,Ozone,col="red"))
legend("topright", pch = 1, col = c("blue", "red"),
legend = c("May","Other Months"))
## Example 4:
with(airquality, plot(Wind,Ozone,
main = "Ozone and Wind in New York City",
pch=20))
model<- lm(Ozone ~ Wind, airquality)
abline(model,lwd = 2)
with(airquality, {
plot(Wind,Ozone, main="Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
})
## Example 5:
par(mfrow=c(1,2))
with(airquality, {
plot(Wind,Ozone, main="Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
})
## Example 6:
par(mfrow=c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
with(airquality,{
plot(Wind,Ozone, main="Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp,Ozone,main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = T)
})
# example 1:
x <- rnorm(100)
hist(x)
plot(x,y)
y <- rnorm(100)
plot(x,y)
z <- rnorm(100)
plot(x,z)
plot(x,y)
# change margins:
par(mar = c(2,2,2,2))
plot(x,y)
# make margins a bit bigger on the bottom and left
par(mar = c(4,4,2,2))
plot(x,y)
plot(x,y,pch = 20)
plot(x,y,pch = 19)#
plot(x,y, pch = 2)
plot(x,y,pch = 3) #
plot(x,y, pch = 4)
example(points)
x <- rnorm(100)
y<- rnorm(100)
plot(x,y,pch=20)
title("scatterplot")
legend("topleft", legend = "Data")
legend("topleft", legend = "Data", pch = 20)
fit <- lm(y~x)
abline(fit)
abline(fit, lwd = 3) # this line will have thickness 3
abline(fit, lwd=3, col = "blue")
plot(x,y,xlab = "Weight",ylab="Height",
main = "Scatterplot",
pch = 20)
legend('topright', legend = "Data", pch = 20)
fit<-lm(y~x)
abline(fit,lwd=3,col="red")
z<-rpois(100,2)
par(mfrow=c(2,1))
plot(x,y,pch=20)
plot(x,z,pch = 19)
par(mar= c(2,2,1,1))
plot(x,y,pch=20)
plot(x,z,pch = 19)
par(mfrow =c(1,2))
plot(x,y,pch=20)
plot(x,z,pch = 19)
par(mar=c(4,4,2,2))
mfrow=c(2,1))
plo
plot(x,y,pch=20)
plot(x,z,pch = 19)
par(mar= c(2,2,1,1))
par(mfrow =c(1,2))
par(mar=c(4,4,2,2))
plot(x,y,pch=20)
plot(x,z,pch = 19)
x<- rnorm(100)
y<- x + rnorm(100)
g<- gl(2,50)
g
g<- gl(2,50,labels=c('Male','Female'))
g
str(g)
plot(x,y)
plot(x,y, type = "n") # gets plot ready but no points are plotted
points(x[g== "Male"],y[g=="Male"],col="green")
points(x[g== "Female"],y[g=="Female"],col="blue")
points(x[g== "Male"],y[g=="Male"],col="red",pch=8)
points(x[g== "Female"],y[g=="Female"],col="blue",pch = 5)
y
ot
plot(x,y, type = "n") # gets plot ready but no points are plotted
points(x[g== "Male"],y[g=="Male"],col="red",pch=8)
points(x[g== "Female"],y[g=="Female"],col="blue",pch = 5)
?Devices
with(faithful, plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.off()
## second way:
## launch a graphics device
pdf(file = "myplot.pdf") # creates 'myplot.pdf in working directory
## call a plotting function and send to file
with(faithful, plot(eruptions, waiting))
## Annotate plot if necessary
title(main = "Old Faithful Geyser data")
## explicitly close graphics device
dev.off() ## important!
dev.cur()
?dev.copy2pdf
## copying a plot.
with(faithful,plot(eruptions,waiting)) ## plot to screen device
dev.cur()
title(main = "old Faithful Geyser data")
title(main = "Old Faithful Geyser data")
dev.off()
## copying a plot.
with(faithful,plot(eruptions,waiting)) ## plot to screen device
title(main = "Old Faithful Geyser data")
dev.copy(png,file = 'geyserplot.png') ## copy to png
dev.cur()
dev.off()
library(swirl)
rm(list=ls())
dev.cur()
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
polluton$pm25
pollution$pm25
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col="blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = magenta, lwd = 4)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg<- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution, region == "east")
head(east)
hist(east$pm25, "green")
hist(east$pm25, col ="green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude,pm25))
abline(h = 12)
abline(h = 12, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col=pollution$region)
abine(h = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow=c(1,2), mar = (5,4,2,1))
par(mfrow=c(1,2), mar = c(5,4,2,1))
west<-subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main="old Faithful Geyser data")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file='geyserplot.png')
dev.off()
head(cars)
with(cars, plot(speed,dist))
text(mean(cars$speed), max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data= state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data= state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
zplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~month, airquality )
boxplot(Ozone~Month, airquality )
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis = "blue", col.lab = "red" )
title("Ozone and wind in New York City")
title("Ozone and w=Wind in New York City")
title(main="Ozone and w=Wind in New York City")
title(main="Ozone and Wind in New York City" )
with( airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City" )
par()
length(par())
names(par())
?par
par()$pin
par("fg")
par('pch')
par('lty')
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airquality,Month==5)
points(may$Wind, may$Ozone, col = "blue", pch=3)
points(may$Wind, may$Ozone, col = "blue", pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue","red"), Legend=c("May","Other Months")
)
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation").
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
download.file("http://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption", method="curl")
download.file("http://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption",'./week1Project/zipdata.zip' method="curl")
download.file("http://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption",'./week1Project/zipdata.zip')
?unzip
unzip("zipdata.zip", exdir="week1Project/data")
ls
ls()
dir()
cd data
temp<-tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
?read.table
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
comment.char = "?" )
head(data)
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
header=TRUE,
sep = ";",
comment.char = "?")
data[6840]
data[6840,]
na.strings = "?")
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
)
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
header=TRUE,
sep = ";",
quote = "",
na.strings = "?")
summary(data)
class(data)
class(data$Date)
?strptime()
library(lubridate)
dmy(data$Date[1])
class(dmy(data$Date[1]))
data$Date = dmy(data$Date)
data$Time = hms(data$Time)
date$Time[1]
head(date$Time)
head(data)
?strptime
## unzip data and read to a table
data <- read.table(unz(temp,"household_power_consumption.txt"),
header=TRUE,
sep = ";",
quote = "",
na.strings = "?")
strtime(data$Time[1])
strptime(data$Time[1])
?lubridate
hms(data$Time[1])
class(hms(data$Time[1]))
as.Date(data$Time[1:5])
hms(data$Time[1])
hms(data$Time[1])-hms(date$Time[2])
t1=hms(data$Time[1])
t2=hms(data$Time[2])
t1-t2
dateTime = paste(data$Date,data$Time,sep="")
dateTime = dmy_hms(dateTime)
class(dateTime)
head(dateTime)
dateTime = paste(data$Date,data$Time,sep="")
with(data, hist(Global_Active_Power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"))
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"))
plot.new()
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"))
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1))
dev.off()
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1))
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
data$Date = paste(data$Date,data$Time, sep="")
data$Date = dmy_hms(data$Date)
data$Time = hms(data$Time)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
unlink(temp)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
library(dplyr)
?filter
data2<- filter(data, Date == "01/02/2007", Date=="02/02/2007")
head(data2)
data2<- filter(data, Date %in% c("01/02/2007","02/02/2007"))
unique(data$Date)
data2<- filter(data, dmy(Date) %in% c(dmy("01/02/2007)",dmy("02/02/2007"))
)
data2<- filter(data, dmy(Date) %in% c(dmy("01/02/2007"),dmy("02/02/2007"))
)
head(data2)
table(data2$Date)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
class(data$DateTime)
mdy(feb 1,2007)
mdy("feb 1,2007")
dmy("Feb 1,2007")
mdy("Feb 1,2007")
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1))
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
## add a DateTime variable (a POSIXct date-time object)
data$DateTime = paste(data$Date,data$Time, sep="")
## add a DateTime variable (a POSIXct date-time object)
data$DateTime = paste(data$Date,data$Time, sep=" ")
data$DateTime = dmy_hms(data$DateTime)
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1))
with(data, hist(Global_active_power,col="red", main = "Global Active Power", ylab="Frequency", xlab = "Global Active Power (kilowatts"), margin=c(4,4,2,1), xlim = 0:6)
with(data, hist(Global_active_power,col="red", main = "Global Active Power",
ylab="Frequency", xlab = "Global Active Power (kilowatts"))
with(data, hist(Global_active_power,col="red", main = "Global Active Power",
ylab="Frequency", xlab = "Global Active Power (kilowatts)"))
ls
ls()
"data" %in% ls()
source('C:/Users/sarah/OneDrive/R/dataScienceCoursera/ExploratoryDataAnalysis/week1Project/plot1.R')
