", "
,round(results$conf[2],2), "]" ))
dose2.0 <- ToothGrowth %>% filter(dose == 2.0) %>% select(len)
results <- t.test(dose2.0,dose1.0, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,7) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]" ))
suppOJ0.5<- ToothGrowth %>% filter(supp == "OJ" & dose== 0.5) %>% select(len)
suppVC0.5<- ToothGrowth %>% filter(supp == "VC" & dose== 0.5) %>% select(len)
results <- t.test(suppOJ0.5,suppVC0.5, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,5) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]" ))
suppOJ1.0 <- ToothGrowth %>% filter(supp == "OJ" & dose== 1.0) %>% select(len)
suppVC1.0 <- ToothGrowth %>% filter(supp == "VC" & dose== 1.0) %>% select(len)
results <- t.test(suppOJ1.0,suppVC1.0, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,5) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]" ))
suppOJ2.0<- ToothGrowth %>% filter(supp == "OJ" & dose== 2.0) %>% select(len)
suppVC2.0<- ToothGrowth %>% filter(supp == "VC" & dose== 2.0) %>% select(len)
results<-t.test(suppOJ2.0,suppVC2.0, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,2) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]" ))
names(ToothGrowth)
data.summary <-ToothGrowth %>% group_by(supp,dose) %>%
summarize(mean = mean(len), median = median(len), min = min(len), max = max(len))
data.summary
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
dose0.5<- ToothGrowth %>% filter(dose == 0.5) %>% select(len)
dose1.0<- ToothGrowth %>% filter(dose == 1.0) %>% select(len)
t.test(dose1.0,dose0.5, alternative = "two.sided", var.equal = T)
dose2.0<- ToothGrowth %>% filter(dose == 2.0) %>% select(len)
t.test(dose2.0,dose1.0, alternative = "two.sided", var.equal = T)
suppOJ0.5<- ToothGrowth %>% filter(supp == "OJ" & dose== 0.5) %>% select(len)
suppVC0.5<- ToothGrowth %>% filter(supp == "VC" & dose== 0.5) %>% select(len)
t.test(suppOJ0.5,suppVC0.5, alternative = "two.sided", var.equal = T)
suppOJ1.0<- ToothGrowth %>% filter(supp == "OJ" & dose== 1.0) %>% select(len)
suppVC1.0<- ToothGrowth %>% filter(supp == "VC" & dose== 1.0) %>% select(len)
t.test(suppOJ1.0,suppVC1.0, alternative = "two.sided", var.equal = T)
suppOJ2.0<- ToothGrowth %>% filter(supp == "OJ" & dose== 2.0) %>% select(len)
suppVC2.0<- ToothGrowth %>% filter(supp == "VC" & dose== 2.0) %>% select(len)
t.test(suppOJ2.0,suppVC2.0, alternative = "two.sided", var.equal = T)
dose0.5 <- ToothGrowth %>% filter(dose == 0.5) %>% select(len)
dose1.0 <- ToothGrowth %>% filter(dose == 1.0) %>% select(len)
results <- t.test(dose1.0,dose0.5, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,9) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]",
sep = ""))
dose2.0 <- ToothGrowth %>% filter(dose == 2.0) %>% select(len)
results <- t.test(dose2.0,dose1.0, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,7) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]",
sep = ""))
suppOJ0.5<- ToothGrowth %>% filter(supp == "OJ" & dose== 0.5) %>% select(len)
suppVC0.5<- ToothGrowth %>% filter(supp == "VC" & dose== 0.5) %>% select(len)
results <- t.test(suppOJ0.5,suppVC0.5, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,5) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]",
sep = ""))
suppOJ1.0 <- ToothGrowth %>% filter(supp == "OJ" & dose== 1.0) %>% select(len)
suppVC1.0 <- ToothGrowth %>% filter(supp == "VC" & dose== 1.0) %>% select(len)
results <- t.test(suppOJ1.0,suppVC1.0, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,5) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]",
sep = ""))
suppOJ2.0<- ToothGrowth %>% filter(supp == "OJ" & dose== 2.0) %>% select(len)
suppVC2.0<- ToothGrowth %>% filter(supp == "VC" & dose== 2.0) %>% select(len)
results<-t.test(suppOJ2.0,suppVC2.0, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,2) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]",
sep = ""))
suppOJ2.0<- ToothGrowth %>% filter(supp == "OJ" & dose== 2.0) %>% select(len)
suppVC2.0<- ToothGrowth %>% filter(supp == "VC" & dose== 2.0) %>% select(len)
results<-t.test(suppOJ2.0,suppVC2.0, alternative = "two.sided", var.equal = T)
print(paste("results: p-value = ",
round(results$p.value,2) ,
", confidence interval: [",
round(results$conf[1],2),
", "
,round(results$conf[2],2), "]",
sep = ""))
names(ToothGrowth)
data.summary <-ToothGrowth %>% group_by(supp,dose) %>%
summarize(mean = mean(len), median = median(len), min = min(len), max = max(len))
data.summary
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
dose0.5<- ToothGrowth %>% filter(dose == 0.5) %>% select(len)
dose1.0<- ToothGrowth %>% filter(dose == 1.0) %>% select(len)
t.test(dose1.0,dose0.5, alternative = "two.sided", var.equal = T)
dose2.0<- ToothGrowth %>% filter(dose == 2.0) %>% select(len)
t.test(dose2.0,dose1.0, alternative = "two.sided", var.equal = T)
suppOJ0.5<- ToothGrowth %>% filter(supp == "OJ" & dose== 0.5) %>% select(len)
suppVC0.5<- ToothGrowth %>% filter(supp == "VC" & dose== 0.5) %>% select(len)
t.test(suppOJ0.5,suppVC0.5, alternative = "two.sided", var.equal = T)
suppOJ1.0<- ToothGrowth %>% filter(supp == "OJ" & dose== 1.0) %>% select(len)
suppVC1.0<- ToothGrowth %>% filter(supp == "VC" & dose== 1.0) %>% select(len)
t.test(suppOJ1.0,suppVC1.0, alternative = "two.sided", var.equal = T)
suppOJ2.0<- ToothGrowth %>% filter(supp == "OJ" & dose== 2.0) %>% select(len)
suppVC2.0<- ToothGrowth %>% filter(supp == "VC" & dose== 2.0) %>% select(len)
t.test(suppOJ2.0,suppVC2.0, alternative = "two.sided", var.equal = T)
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
set.seed(1234)
## get value of the 99.5th percentile
xmax <- qexp(0.999, rate=0.2)
## choose equally spaced x-values
xvals <- seq(0, xmax, length=1000)
# create a data frame with 1000 randomly
# generated exponential values to plot
# with the
expdist <- data.frame(values=rexp(1000,rate=0.2))
g<-ggplot(expdist, aes(x=values)) + xlim(0,27)+
geom_histogram(aes(y =..density..),
binwidth=xmax/30,
colour="black",
fill="white",
) +
stat_function(fun = dexp, args = list(rate=0.2),colour="blue") +
annotate(geom="text", x=10, y=0.085,
label=eval(lambda ~ "= 0.2"),
color="black") +
ggtitle("Exp. Prob. Dist. & Hist of 1,000 Exp. RVs") +
labs(y="Density") +
theme(plot.title = element_text(color='black',
size=9,
face="bold",
hjust = 0.5),
axis.title.x=element_blank())
g
set.seed(123)
smu<-NULL
svar<-NULL
n=40
for (i in 1:1000){
sample = rexp(n,rate = 0.2)
cmu<-mean(sample)
cvar<-var(sample)
smu<-c(smu,cmu)
svar<-c(svar,cvar)
}
hist(smu,prob=T, ylim=c(0,0.5),breaks=15,
main = "Distribution of 1,000 Sample Means\n from an Exp Dist with n = 40",
cex.main = .8,
xlab = NULL)
samplingmu = mean(smu)
abline(v=5, col="blue",lwd=2)
abline(v = samplingmu, col="red",lwd=2)
curve(dnorm(x,mean=5, sd=5/sqrt(40)),col="blue", add=T,lwd=2)
conf.int<- samplingmu + c(-1,1)*qnorm(0.995)*5/sqrt(40)
legend("topright",
legend = c("Norm(mu=5, var=5/8)",
paste("sampling mean:",round(samplingmu,2)),
paste("95%-Confidence Interval: ",
"[",
round(conf.int[1],2),
", ",
round(conf.int[2],2),"]"
,sep=""),
paste("Theoretical Standard Error: ",
round(5/sqrt(40),2),sep=""),
paste("Calculated Standard Error: ",
round(sd(smu),2),sep="")),
col = c("blue","red", "0","0","0"),
pch = "-",
bty = "n",
pt.cex = 2,
cex = .7,
text.col = "black",
horiz = F ,
inset = c(-0.01, 0)
)
set.seed(123)
smu<-NULL
svar<-NULL
n=40
for (i in 1:1000){
sample = rexp(n,rate = 0.2)
cmu<-mean(sample)
cvar<-var(sample)
smu<-c(smu,cmu)
svar<-c(svar,cvar)
}
hist(smu,prob=T, ylim=c(0,0.5),breaks=15,
main = "Distribution of 1,000 Sample Means\n from an Exp Dist with n = 40",
cex.main = .8,
xlab = NULL)
samplingmu = mean(smu)
abline(v=5, col="blue",lwd=2)
abline(v = samplingmu, col="red",lwd=2)
curve(dnorm(x,mean=5, sd=5/sqrt(40)),col="blue", add=T,lwd=2)
conf.int<- samplingmu + c(-1,1)*qnorm(0.995)*5/sqrt(40)
legend("topright",
legend = c("Norm(mu=5, var=5/8)",
paste("sampling mean:",round(samplingmu,2)),
paste("95%-Confidence Interval: ",
"[",
round(conf.int[1],2),
", ",
round(conf.int[2],2),"]"
,sep=""),
paste("Theoretical Standard Error: ",
round(5/sqrt(40),2),sep=""),
paste("Calculated Standard Error: ",
round(sd(smu),2),sep="")),
col = c("blue","red", "0","0","0"),
pch = "-",
bty = "n",
pt.cex = 2,
cex = .8,
text.col = "black",
horiz = F ,
inset = c(-0.01, 0)
)
set.seed(123)
smu<-NULL
svar<-NULL
n=40
for (i in 1:1000){
sample = rexp(n,rate = 0.2)
cmu<-mean(sample)
cvar<-var(sample)
smu<-c(smu,cmu)
svar<-c(svar,cvar)
}
hist(smu,prob=T, ylim=c(0,0.5),breaks=15,
main = "Distribution of 1,000 Sample Means\n from an Exp Dist with n = 40",
cex.main = .8,
xlab = NULL)
samplingmu = mean(smu)
abline(v=5, col="blue",lwd=2)
abline(v = samplingmu, col="red",lwd=2)
curve(dnorm(x,mean=5, sd=5/sqrt(40)),col="blue", add=T,lwd=2)
conf.int<- samplingmu + c(-1,1)*qnorm(0.995)*5/sqrt(40)
legend("topright",
legend = c("Norm(mu=5, var=5/8)",
paste("sampling mean:",round(samplingmu,2)),
paste("95%-Confidence Interval: ",
"[",
round(conf.int[1],2),
", ",
round(conf.int[2],2),"]"
,sep=""),
paste("Theoretical Standard Error: ",
round(5/sqrt(40),2),sep=""),
paste("Calculated Standard Error: ",
round(sd(smu),2),sep="")),
col = c("blue","red", "0","0","0"),
pch = "-",
bty = "n",
pt.cex = 2,
cex = .8,
text.col = "black",
horiz = F ,
inset = c(-0.015, 0)
)
set.seed(123)
smu<-NULL
svar<-NULL
n=40
for (i in 1:1000){
sample = rexp(n,rate = 0.2)
cmu<-mean(sample)
cvar<-var(sample)
smu<-c(smu,cmu)
svar<-c(svar,cvar)
}
hist(smu,prob=T, ylim=c(0,0.5),breaks=15,
main = "Distribution of 1,000 Sample Means\n from an Exp Dist with n = 40",
cex.main = .8,
xlab = NULL)
samplingmu = mean(smu)
abline(v=5, col="blue",lwd=2)
abline(v = samplingmu, col="red",lwd=2)
curve(dnorm(x,mean=5, sd=5/sqrt(40)),col="blue", add=T,lwd=2)
conf.int<- samplingmu + c(-1,1)*qnorm(0.995)*5/sqrt(40)
legend("topright",
legend = c("Norm(mu=5, var=5/8)",
paste("sampling mean:",round(samplingmu,2)),
paste("95%-Confidence Interval: ",
"[",
round(conf.int[1],2),
", ",
round(conf.int[2],2),"]"
,sep=""),
paste("Theoretical Standard Error: ",
round(5/sqrt(40),2),sep=""),
paste("Calculated Standard Error: ",
round(sd(smu),2),sep="")),
col = c("blue","red", "0","0","0"),
pch = "-",
bty = "n",
pt.cex = 2,
cex = .8,
text.col = "black",
horiz = F ,
inset = c(-0.01, -.01)
)
set.seed(123)
smu<-NULL
svar<-NULL
n=40
for (i in 1:1000){
sample = rexp(n,rate = 0.2)
cmu<-mean(sample)
cvar<-var(sample)
smu<-c(smu,cmu)
svar<-c(svar,cvar)
}
hist(smu,prob=T, ylim=c(0,0.5),breaks=15,
main = "Distribution of 1,000 Sample Means\n from an Exp Dist with n = 40",
cex.main = .8,
xlab = NULL)
samplingmu = mean(smu)
abline(v=5, col="blue",lwd=2)
abline(v = samplingmu, col="red",lwd=2)
curve(dnorm(x,mean=5, sd=5/sqrt(40)),col="blue", add=T,lwd=2)
conf.int<- samplingmu + c(-1,1)*qnorm(0.995)*5/sqrt(40)
legend("topright",
legend = c("Norm(mu=5, var=5/8)",
paste("sampling mean:",round(samplingmu,2)),
paste("95%-Confidence Interval: ",
"[",
round(conf.int[1],2),
", ",
round(conf.int[2],2),"]"
,sep=""),
paste("Theoretical Standard Error: ",
round(5/sqrt(40),2),sep=""),
paste("Calculated Standard Error: ",
round(sd(smu),2),sep="")),
col = c("blue","red", "0","0","0"),
pch = "-",
bty = "n",
pt.cex = 2,
cex = .8,
text.col = "black",
horiz = F ,
inset = c(-0.01, -.02)
)
set.seed(123)
smu<-NULL
svar<-NULL
n=40
for (i in 1:1000){
sample = rexp(n,rate = 0.2)
cmu<-mean(sample)
cvar<-var(sample)
smu<-c(smu,cmu)
svar<-c(svar,cvar)
}
hist(smu,prob=T, ylim=c(0,0.5),breaks=15,
main = "Distribution of 1,000 Sample Means\n from an Exp Dist with n = 40",
cex.main = .8,
xlab = NULL)
samplingmu = mean(smu)
abline(v=5, col="blue",lwd=2)
abline(v = samplingmu, col="red",lwd=2)
curve(dnorm(x,mean=5, sd=5/sqrt(40)),col="blue", add=T,lwd=2)
conf.int<- samplingmu + c(-1,1)*qnorm(0.995)*5/sqrt(40)
legend("topright",
legend = c("Norm(mu=5, var=5/8)",
paste("sampling mean:",round(samplingmu,2)),
paste("95%-Confidence Interval: ",
"[",
round(conf.int[1],2),
", ",
round(conf.int[2],2),"]"
,sep=""),
paste("Theoretical Standard Error: ",
round(5/sqrt(40),2),sep=""),
paste("Calculated Standard Error: ",
round(sd(smu),2),sep="")),
col = c("blue","red", "0","0","0"),
pch = "-",
bty = "n",
pt.cex = 2,
cex = .8,
text.col = "black",
horiz = F ,
inset = c(-0.01, -.025)
)
set.seed(123)
smu<-NULL
svar<-NULL
n=40
for (i in 1:1000){
sample = rexp(n,rate = 0.2)
cmu<-mean(sample)
cvar<-var(sample)
smu<-c(smu,cmu)
svar<-c(svar,cvar)
}
hist(smu,prob=T, ylim=c(0,0.5),breaks=15,
main = "Distribution of 1,000 Sample Means\n from an Exp Dist with n = 40",
cex.main = .8,
xlab = NULL)
samplingmu = mean(smu)
abline(v=5, col="blue",lwd=2)
abline(v = samplingmu, col="red",lwd=2)
curve(dnorm(x,mean=5, sd=5/sqrt(40)),col="blue", add=T,lwd=2)
conf.int<- samplingmu + c(-1,1)*qnorm(0.995)*5/sqrt(40)
legend("topright",
legend = c("Norm(mu=5, var=5/8)",
paste("sampling mean:",round(samplingmu,2)),
paste("95%-Confidence Interval: ",
"[",
round(conf.int[1],2),
", ",
round(conf.int[2],2),"]"
,sep=""),
paste("Theoretical Standard Error: ",
round(5/sqrt(40),2),sep=""),
paste("Calculated Standard Error: ",
round(sd(smu),2),sep="")),
col = c("blue","red", "0","0","0"),
pch = "-",
bty = "n",
pt.cex = 2,
cex = .8,
text.col = "black",
horiz = F ,
inset = c(-0.01, -.03)
)
set.seed(123)
smu<-NULL
svar<-NULL
n=40
for (i in 1:1000){
sample = rexp(n,rate = 0.2)
cmu<-mean(sample)
cvar<-var(sample)
smu<-c(smu,cmu)
svar<-c(svar,cvar)
}
hist(smu,prob=T, ylim=c(0,0.5),breaks=15,
main = "Distribution of 1,000 Sample Means\n from an Exp Dist with n = 40",
cex.main = .8,
xlab = NULL)
samplingmu = mean(smu)
abline(v=5, col="blue",lwd=2)
abline(v = samplingmu, col="red",lwd=2)
curve(dnorm(x,mean=5, sd=5/sqrt(40)),col="blue", add=T,lwd=2)
conf.int<- samplingmu + c(-1,1)*qnorm(0.995)*5/sqrt(40)
legend("topright",
legend = c("Norm(mu=5, var=5/8)",
paste("sampling mean:",round(samplingmu,2)),
paste("95%-Confidence Interval: ",
"[",
round(conf.int[1],2),
", ",
round(conf.int[2],2),"]"
,sep=""),
paste("Theoretical Standard Error: ",
round(5/sqrt(40),2),sep=""),
paste("Calculated Standard Error: ",
round(sd(smu),2),sep="")),
col = c("blue","red", "0","0","0"),
pch = "-",
bty = "n",
pt.cex = 2,
cex = .8,
text.col = "black",
horiz = F ,
inset = c(-0.01, -.04)
)
